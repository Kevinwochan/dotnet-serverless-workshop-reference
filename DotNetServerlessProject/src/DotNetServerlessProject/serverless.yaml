---
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An AWS Serverless Application that uses the ASP.NET Core framework running
  in Amazon Lambda.
Resources:
  OneStopTopic:
    Type: AWS::SNS::Topic
  OneStopSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref OneStopTopic
      Endpoint: "+610000000000"
      Protocol: sms

  EventBridgeToSnSPolicy:
    Type: AWS::SNS::TopicPolicy
    Properties: 
      PolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: events.amazonaws.com
          Action: sns:Publish
          Resource: !Ref OneStopTopic
      Topics:
        - !Ref OneStopTopic

  EventRule:
    Type: AWS::Events::Rule
    Properties:
      Description: "My Description"
      EventPattern:
        source:
          - "my.source"
      Targets:
        - Arn: !GetAtt LogGroupForEvents.Arn
          Id: LogTarget
        - Arn: !Ref OneStopTopic
          Id: "Topic"
  LogGroupForEvents:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/vendedlogs/events/resource-policy-test
  LogGroupForEventsPolicy:
    Type: AWS::Logs::ResourcePolicy
    Properties:
      PolicyName: EventBridgeToCWLogsPolicy
      PolicyDocument: !Sub >
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "EventBridgetoCWLogsCreateLogStreamPolicy",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "events.amazonaws.com"
                ]
              },
              "Action": [
                "logs:CreateLogStream"
              ],
              "Resource": [
                "${LogGroupForEvents.Arn}"
              ]
            },
            {
              "Sid": "EventBridgetoCWLogsPutLogEventsPolicy",
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "events.amazonaws.com"
                ]
              },
              "Action": [
                "logs:PutLogEvents"
              ],
              "Resource": [
                "${LogGroupForEvents.Arn}"
              ]
            }
          ]
        }
  StorageTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: MyStorageTable
      PrimaryKey:
        Name: myID
        Type: String
  AspNetCoreFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: DotNetServerlessProject::DotNetServerlessProject.LambdaEntryPoint::FunctionHandlerAsync
      Runtime: dotnet6
      CodeUri: ''
      MemorySize: 256
      Timeout: 30
      Policies:
      - AWSLambda_FullAccess
      - DynamoDBCrudPolicy:
          TableName: !Ref StorageTable
      - Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - events:PutEvents
            Resource:
              - '*'
      Events:
        ProxyResource:
          Type: Api
          Properties:
            Path: "/{proxy+}"
            Method: ANY
        RootResource:
          Type: Api
          Properties:
            Path: "/"
            Method: ANY
Outputs:
  ApiURL:
    Description: API endpoint URL for Prod environment
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
